name: Deploy Server AWS

on: 
  push:
    branches: 
      - server

jobs:
  deploy-aws:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    # https://stackoverflow.com/questions/58139175/running-actions-in-another-directory
    
    - name: Lambda - Install dependencies
      working-directory: ./lambdas/emoji-rain-handler
      run: npm i

    - name: Lambda - Build using NCC
      working-directory: ./lambdas/emoji-rain-handler
      run: npx ncc build index.ts -o dist/ncc

    - name: Lambda - Create ZIP
      working-directory: ./lambdas/emoji-rain-handler
      run: zip -j dist/deploy.zip ./dist/ncc/*

    # CDK 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: us-east-2

    - name: Install AWS CDK
      run: npm install -g aws-cdk

    - name: CDK - Install dependencies
      run: npm i

    - name: CDK - Synth
      run: cdk synth

    - name: CDK - Test
      run: npm run test

    - name: CDK - Diff
      run: cdk diff
    
    - name: CDK - Deploy
      run: |
        cdk bootstrap
        cdk deploy --outputs-file ./cdk-outputs.json
        cat ./cdk-outputs.json

    - name: Upload cdk-outputs artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: ./cdk-outputs.json


  upload-url-frontend:
    needs: deploy-aws
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Master
      uses: actions/checkout@v2
      with:
        ref: 'master'

    - name: Download cdk-outputs
      uses: actions/download-artifact@v2
      with:
        name: my-artifact
        path: .
    
    - name: list files
      run: ls

    - name: Push to master
      run: |
        git config --global user.email ${{secrets.MY_EMAIL}}
        git config --global user.name ${{secrets.MY_USERNAME}}
        git remote set-url origin https://${{secrets.MY_PERSONAL_TOKEN_PUBLIC}}@github.com/${{github.repository}}
        git status
        git add cdk-outputs.json
        git commit -m "[BOT] [CDK-OUTPUT]" --allow-empty
        git push origin master || ture